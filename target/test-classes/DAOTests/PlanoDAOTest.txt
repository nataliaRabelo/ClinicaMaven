import org.junit.*;
import static org.junit.Assert.*;
import model.PlanoDAO;
import aplicacao.Plano;

public class PlanoDAOTest {

    private PlanoDAO dao;

    @Before
    public void setUp() {
        // substitua pela string de conexão do seu banco de dados
        dao = new PlanoDAO("jdbc:postgresql://localhost:5432/mydb", "username", "password");
    }

    @Test
    public void testCreatePlano() {
        Plano novo_plano = new Plano();
        novo_plano.setDescricao("Plano Teste");

        dao.create_plano(novo_plano);

        Plano retrieved = dao.get_plano(novo_plano.getId());

        assertNotNull("Plano não deveria ser null", retrieved);
        assertEquals("Descrição deveria ser a mesma", novo_plano.getDescricao(), retrieved.getDescricao());
    }

    @Test
    public void testGetPlano() {
        Plano plano = dao.get_plano(1); // assume que há um plano com id 1 no BD
        assertNotNull("Plano não deveria ser null", plano);
    }

    @Test
    public void testUpdatePlano() {
        Plano novo_plano = new Plano();
        novo_plano.setDescricao("Plano Teste Atualizado");

        dao.update_plano(1, novo_plano); // assume que há um plano com id 1 no BD

        Plano retrieved = dao.get_plano(1);
        assertEquals("Descrição deveria ser a mesma", novo_plano.getDescricao(), retrieved.getDescricao());
    }

    @Test
    public void testDeletePlano() {
        int idToDelete = 1; // assume que há um plano com id 1 no BD
        dao.delete_plano(idToDelete);
        Plano retrieved = dao.get_plano(idToDelete);
        assertNull("Plano deveria ser null", retrieved);
    }

    @Test
    public void testGetIdDeletePlano() {
        int idPlano = 1; // assume que há um plano com id 1 no BD

        ArrayList<ArrayList<Integer>> id_compilado = dao.get_idDeletePlano(idPlano);

        assertNotNull("id_compilado não deveria ser null", id_compilado);

        // Verifica se as listas têm o tamanho esperado (isso dependerá de como seu banco de dados está configurado)
        assertEquals("A lista de ids de exames deve ter tamanho 1", 1, id_compilado.get(0).size());
        assertEquals("A lista de ids de consultas deve ter tamanho 1", 1, id_compilado.get(1).size());
        assertEquals("A lista de ids de pacientes deve ter tamanho 1", 1, id_compilado.get(2).size());
    }

    @After
    public void tearDown() {
        dao = null;
    }
}
